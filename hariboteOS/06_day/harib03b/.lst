     1                                  ; naskfunc
     2                                  ; TAB=4
     3                                  
     4                                  ;[FORMAT "WCOFF"]				; オブジェクトファイルを作るモード ; NASMではエラーが出るのでこの行削除	
     5                                  ;[INSTRSET "i486p"]				; 486の命令まで使いたいという記述 ; NASMではエラーが出るのでこの行削除
     6                                  [BITS 32]						; 32ビットモード用の機械語を作らせる
     7                                  ;[FILE "naskfunc.nas"]			; ソースファイル名情報 ; NASMではエラーが出るのでこの行削除
     8                                  
     9                                  		; 以下、アンダーバー付き関数名からアンダーバー除いた関数名に修正する
    10                                  		; _io_hlt →　io_hlt など
    11                                  		GLOBAL	io_hlt, io_cli, io_sti, io_stihlt
    12                                  		GLOBAL	io_in8,  io_in16,  io_in32
    13                                  		GLOBAL	io_out8, io_out16, io_out32
    14                                  		GLOBAL	io_load_eflags, io_store_eflags
    15                                  		GLOBAL	load_gdtr, load_idtr
    16                                  
    17                                  [SECTION .text]
    18                                  
    19                                  io_hlt:	; void io_hlt(void);
    20 00000000 F4                      		HLT
    21 00000001 C3                      		RET
    22                                  
    23                                  io_cli:	; void io_cli(void);
    24 00000002 FA                      		CLI
    25 00000003 C3                      		RET
    26                                  
    27                                  io_sti:	; void io_sti(void);
    28 00000004 FB                      		STI
    29 00000005 C3                      		RET
    30                                  
    31                                  io_stihlt:	; void io_stihlt(void);
    32 00000006 FB                      		STI
    33 00000007 F4                      		HLT
    34 00000008 C3                      		RET
    35                                  
    36                                  io_in8:	; int io_in8(int port);
    37 00000009 8B542404                		MOV		EDX,[ESP+4]		; port
    38 0000000D B800000000              		MOV		EAX,0
    39 00000012 EC                      		IN		AL,DX
    40 00000013 C3                      		RET
    41                                  
    42                                  io_in16:	; int io_in16(int port);
    43 00000014 8B542404                		MOV		EDX,[ESP+4]		; port
    44 00000018 B800000000              		MOV		EAX,0
    45 0000001D 66ED                    		IN		AX,DX
    46 0000001F C3                      		RET
    47                                  
    48                                  io_in32:	; int io_in32(int port);
    49 00000020 8B542404                		MOV		EDX,[ESP+4]		; port
    50 00000024 ED                      		IN		EAX,DX
    51 00000025 C3                      		RET
    52                                  
    53                                  io_out8:	; void io_out8(int port, int data);
    54 00000026 8B542404                		MOV		EDX,[ESP+4]		; port
    55 0000002A 8A442408                		MOV		AL,[ESP+8]		; data
    56 0000002E EE                      		OUT		DX,AL
    57 0000002F C3                      		RET
    58                                  
    59                                  io_out16:	; void io_out16(int port, int data);
    60 00000030 8B542404                		MOV		EDX,[ESP+4]		; port
    61 00000034 8B442408                		MOV		EAX,[ESP+8]		; data
    62 00000038 66EF                    		OUT		DX,AX
    63 0000003A C3                      		RET
    64                                  
    65                                  io_out32:	; void io_out32(int port, int data);
    66 0000003B 8B542404                		MOV		EDX,[ESP+4]		; port
    67 0000003F 8B442408                		MOV		EAX,[ESP+8]		; data
    68 00000043 EF                      		OUT		DX,EAX
    69 00000044 C3                      		RET
    70                                  
    71                                  io_load_eflags:	; int io_load_eflags(void);
    72 00000045 9C                      		PUSHFD		; PUSH EFLAGS という意味
    73 00000046 58                      		POP		EAX
    74 00000047 C3                      		RET
    75                                  
    76                                  io_store_eflags:	; void io_store_eflags(int eflags);
    77 00000048 8B442404                		MOV		EAX,[ESP+4]
    78 0000004C 50                      		PUSH	EAX
    79 0000004D 9D                      		POPFD		; POP EFLAGS という意味
    80 0000004E C3                      		RET
    81                                  
    82                                  load_gdtr:		; void load_gdtr(int limit, int addr);
    83 0000004F 668B442404              		MOV		AX,[ESP+4]		; limit
    84 00000054 6689442406              		MOV		[ESP+6],AX
    85 00000059 0F01542406              		LGDT	[ESP+6]
    86 0000005E C3                      		RET
    87                                  
    88                                  load_idtr:		; void load_idtr(int limit, int addr);
    89 0000005F 668B442404              		MOV		AX,[ESP+4]		; limit
    90 00000064 6689442406              		MOV		[ESP+6],AX
    91 00000069 0F015C2406              		LIDT	[ESP+6]
    92 0000006E C3                      		RET
